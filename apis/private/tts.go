package private

import (
	"fmt"
	engine "github.com/webitel/engine/model"
	"github.com/webitel/storage/app"
	"github.com/webitel/wlog"
	"io"
	"net/http"
	"strconv"
	"time"

	. "github.com/webitel/storage/apis/helper"
)

// ffmpeg -f lavfi -i anullsrc=r=16000:cl=mono -t 4 silence.mp3
var silenceMP3_8khz = []uint8{73, 68, 51, 4, 0, 0, 0, 0, 0, 34, 84, 83, 83, 69, 0, 0, 0, 14, 0, 0, 3, 76, 97, 118, 102, 54, 49, 46, 55, 46, 49, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 227, 56, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 102, 111, 0, 0, 0, 15, 0, 0, 0, 54, 0, 0, 16, 8, 0, 17, 22, 22, 26, 26, 31, 31, 35, 35, 40, 40, 44, 49, 49, 53, 53, 58, 58, 62, 62, 67, 67, 71, 71, 76, 80, 80, 85, 85, 89, 89, 94, 94, 98, 98, 103, 103, 107, 112, 112, 116, 116, 121, 121, 125, 125, 130, 130, 134, 139, 139, 143, 143, 148, 148, 152, 152, 157, 157, 161, 161, 166, 170, 170, 175, 175, 179, 179, 184, 184, 188, 188, 193, 193, 197, 202, 202, 206, 206, 211, 211, 215, 215, 220, 220, 224, 224, 229, 233, 233, 238, 238, 242, 242, 247, 247, 251, 251, 255, 0, 0, 0, 0, 76, 97, 118, 99, 54, 49, 46, 49, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 3, 240, 0, 0, 0, 0, 0, 0, 16, 8, 160, 241, 88, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 227, 24, 196, 0, 0, 0, 3, 72, 0, 0, 0, 0, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 59, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 118, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 177, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 76, 65, 77, 69, 51, 46, 49, 48, 48, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 255, 227, 24, 196, 196, 0, 0, 3, 72, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85}
var lenSilence = len(silenceMP3_8khz)

func (api *API) InitTTS() {
	api.Routes.TTS.Handle("/{id}", api.ApiHandler(ttsByProvider)).Methods("GET")
	api.Routes.TTS.Handle("/", api.ApiHandler(ttsByProfile)).Methods("GET")
}

func ttsByProfile(c *Context, w http.ResponseWriter, r *http.Request) {
	params := TtsParamsFromRequest(r)
	var out io.ReadCloser
	var err engine.AppError
	ch := make(chan struct{})

	go func() {
		out, _, _, err = c.App.TTS(app.TtsProfile, params)
		close(ch)
	}()

	wr := func(pos int) int {
		n := pos + 514
		if n > lenSilence {
			n = lenSilence
		}
		w.Write(silenceMP3_8khz[pos:n])
		wlog.Debug(fmt.Sprintf("[%s] send silence %d/%d", params.Id, pos, n))
		return n
	}

	w.WriteHeader(http.StatusOK)
	//TODO
	if params.BackgroundPlayback && params.Format == "mp3" {
		wlog.Debug(fmt.Sprintf("[%s] start send silence", params.Id))
		var n = 0
		for {
			select {
			case <-ch:
				goto start
			case <-time.After(time.Millisecond * 100):
				if n >= lenSilence {
					continue
				}
				n = wr(n)
			}
		}
	}

start:

	<-ch

	if err != nil {
		c.Err = err
		return
	}

	defer out.Close()

	wlog.Debug(fmt.Sprintf("[%s] play tts", params.Id))

	if params.Format == "mp3" {
		ttsCopy(w, out)
	} else {
		io.Copy(w, out)
	}
}

func ttsByProvider(c *Context, w http.ResponseWriter, r *http.Request) {
	params := TtsParamsFromRequest(r)

	out, t, size, err := c.App.TTS(c.Params.Id, params)
	if err != nil {
		c.Err = err
		return
	}

	defer out.Close()

	if t != nil {
		w.Header().Set("Content-Type", *t)
	}
	if size != nil {
		w.Header().Set("Content-Length", strconv.Itoa(*size))
	}

	w.WriteHeader(http.StatusOK)
	if params.Format == "mp3" {
		ttsCopy(w, out)
	} else {
		io.Copy(w, out)
	}
}

func ttsCopy(dst io.Writer, src io.Reader) {
	buf := make([]byte, 8192/2) // SWITCH_RECOMMENDED_BUFFER_SIZE / 2

	var n int
	var err2 error
	for {
		n, _ = src.Read(buf)
		if n <= 0 {
			return
		}
		_, err2 = dst.Write(buf[:n])
		if err2 != nil {
			return
		}
	}
}
